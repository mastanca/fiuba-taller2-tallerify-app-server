<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_request" kind="class" language="C++" prot="public">
    <compoundname>Request</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_request_1a8bb7976c4176a7b406061082a8022cef" prot="private" static="no" mutable="no">
        <type>mg_connection *</type>
        <definition>mg_connection* Request::connection</definition>
        <argsstring></argsstring>
        <name>connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="72" column="1" bodyfile="src/api/networking/Request.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_request_1a30857fa1b1c7f72eae0bf8715afca24e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Request::url</definition>
        <argsstring></argsstring>
        <name>url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="73" column="1" bodyfile="src/api/networking/Request.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_request_1ac1fb9c057c617b04af48798c3843b68a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Request::body</definition>
        <argsstring></argsstring>
        <name>body</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="74" column="1" bodyfile="src/api/networking/Request.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_request_1a6d667096cbc014b4d46e87628201bfcc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Request::httpVerb</definition>
        <argsstring></argsstring>
        <name>httpVerb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="75" column="1" bodyfile="src/api/networking/Request.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_request_1a363792022122212cbf9eb264de6e73dd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Request::elementId</definition>
        <argsstring></argsstring>
        <name>elementId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="76" column="1" bodyfile="src/api/networking/Request.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_request_1a135fd74afd31ea5b1934456cd17dbfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Request::Request</definition>
        <argsstring>(mg_connection *connection, http_message *httpMessage)</argsstring>
        <name>Request</name>
        <param>
          <type>mg_connection *</type>
          <declname>connection</declname>
        </param>
        <param>
          <type>http_message *</type>
          <declname>httpMessage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_request" kindref="compound">Request</ref> constructor Builds request from the mongoose connection and httpmessage Parses httpmethod, body and url <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>httpMessage</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="22" column="1" bodyfile="src/api/networking/Request.cpp" bodystart="6" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_request_1a4d57c725686701f773eb3630630a7ea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Request::~Request</definition>
        <argsstring>()</argsstring>
        <name>~Request</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_request" kindref="compound">Request</ref> destroyer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="27" column="1" bodyfile="src/api/networking/Request.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_request_1a1858382756bc45a009856c3158402278" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Request::writeResponse</definition>
        <argsstring>(Response *response)</argsstring>
        <name>writeResponse</name>
        <param>
          <type><ref refid="class_response" kindref="compound">Response</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes response back to client <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>the response to write </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="33" column="1" bodyfile="src/api/networking/Request.cpp" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_request_1a9dad00a15cff18542801289a24711930" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Request::getUrl</definition>
        <argsstring>() const</argsstring>
        <name>getUrl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_request" kindref="compound">Request</ref> url getter <simplesect kind="return"><para>associated url </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="39" column="1" bodyfile="src/api/networking/Request.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_request_1ad88074d323ab7bef3182a5108b8ba387" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Request::getBody</definition>
        <argsstring>() const</argsstring>
        <name>getBody</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_request" kindref="compound">Request</ref> body getter <simplesect kind="return"><para>parsed body </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="45" column="1" bodyfile="src/api/networking/Request.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_request_1a7f2ed8ff9dcde8f21a53449a177af6da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Request::getHttpVerb</definition>
        <argsstring>() const</argsstring>
        <name>getHttpVerb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_request" kindref="compound">Request</ref> http verb getter <simplesect kind="return"><para>parsed http verb </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="51" column="1" bodyfile="src/api/networking/Request.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_request_1a7f7e7e642947164fab1440d42de239f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Request::getElementId</definition>
        <argsstring>() const</argsstring>
        <name>getElementId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get request&apos;s element id <simplesect kind="return"><para>element id </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="57" column="1" bodyfile="src/api/networking/Request.cpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_request_1a6a5a44a249ca50f0be6414b95a48bed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Request::setElementId</definition>
        <argsstring>(int elementId)</argsstring>
        <name>setElementId</name>
        <param>
          <type>int</type>
          <declname>elementId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the request&apos;s element id <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elementId</parametername>
</parameternamelist>
<parameterdescription>
<para>the element id to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="63" column="1" bodyfile="src/api/networking/Request.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_request_1ab48497486f7a2f86a5354576d66e3472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Request::setUrl</definition>
        <argsstring>(const std::string &amp;url)</argsstring>
        <name>setUrl</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the url of the request <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="69" column="1" bodyfile="src/api/networking/Request.cpp" bodystart="55" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_request_1ae6881c90b066551d2550ecd3a705870b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Request::parseMessage</definition>
        <argsstring>(http_message *httpMessage)</argsstring>
        <name>parseMessage</name>
        <param>
          <type>http_message *</type>
          <declname>httpMessage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Request.h" line="79" column="1" bodyfile="src/api/networking/Request.cpp" bodystart="21" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/api/networking/Request.h" line="13" column="1" bodyfile="src/api/networking/Request.h" bodystart="13" bodyend="80"/>
    <listofallmembers>
      <member refid="class_request_1ac1fb9c057c617b04af48798c3843b68a" prot="private" virt="non-virtual"><scope>Request</scope><name>body</name></member>
      <member refid="class_request_1a8bb7976c4176a7b406061082a8022cef" prot="private" virt="non-virtual"><scope>Request</scope><name>connection</name></member>
      <member refid="class_request_1a363792022122212cbf9eb264de6e73dd" prot="private" virt="non-virtual"><scope>Request</scope><name>elementId</name></member>
      <member refid="class_request_1ad88074d323ab7bef3182a5108b8ba387" prot="public" virt="virtual"><scope>Request</scope><name>getBody</name></member>
      <member refid="class_request_1a7f7e7e642947164fab1440d42de239f8" prot="public" virt="non-virtual"><scope>Request</scope><name>getElementId</name></member>
      <member refid="class_request_1a7f2ed8ff9dcde8f21a53449a177af6da" prot="public" virt="virtual"><scope>Request</scope><name>getHttpVerb</name></member>
      <member refid="class_request_1a9dad00a15cff18542801289a24711930" prot="public" virt="virtual"><scope>Request</scope><name>getUrl</name></member>
      <member refid="class_request_1a6d667096cbc014b4d46e87628201bfcc" prot="private" virt="non-virtual"><scope>Request</scope><name>httpVerb</name></member>
      <member refid="class_request_1ae6881c90b066551d2550ecd3a705870b" prot="private" virt="non-virtual"><scope>Request</scope><name>parseMessage</name></member>
      <member refid="class_request_1a135fd74afd31ea5b1934456cd17dbfba" prot="public" virt="non-virtual"><scope>Request</scope><name>Request</name></member>
      <member refid="class_request_1a6a5a44a249ca50f0be6414b95a48bed9" prot="public" virt="non-virtual"><scope>Request</scope><name>setElementId</name></member>
      <member refid="class_request_1ab48497486f7a2f86a5354576d66e3472" prot="public" virt="non-virtual"><scope>Request</scope><name>setUrl</name></member>
      <member refid="class_request_1a30857fa1b1c7f72eae0bf8715afca24e" prot="private" virt="non-virtual"><scope>Request</scope><name>url</name></member>
      <member refid="class_request_1a1858382756bc45a009856c3158402278" prot="public" virt="virtual"><scope>Request</scope><name>writeResponse</name></member>
      <member refid="class_request_1a4d57c725686701f773eb3630630a7ea2" prot="public" virt="virtual"><scope>Request</scope><name>~Request</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
