<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_tracks_controller" kind="class" language="C++" prot="public">
    <compoundname>TracksController</compoundname>
    <basecompoundref refid="class_controller" prot="public" virt="non-virtual">Controller</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tracks_controller_1ac22a9d208e121c572aca7350f422efc2" prot="private" static="no" mutable="no">
        <type>std::regex</type>
        <definition>std::regex TracksController::tracksRegex</definition>
        <argsstring></argsstring>
        <name>tracksRegex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/controllers/TracksController.h" line="65" column="1" bodyfile="src/api/controllers/TracksController.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tracks_controller_1a23185049184ec7af725174816e8d54d8" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string TracksController::fileName</definition>
        <argsstring></argsstring>
        <name>fileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/controllers/TracksController.h" line="66" column="1" bodyfile="src/api/controllers/TracksController.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tracks_controller_1a0a06390b5b3f3b644e7e2eb6eb49cb69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TracksController::TracksController</definition>
        <argsstring>()</argsstring>
        <name>TracksController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/controllers/TracksController.h" line="19" column="1" bodyfile="src/api/controllers/TracksController.cpp" bodystart="15" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_tracks_controller_1af6236ccbd57548cb5ef149c361b1316c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>TracksController::~TracksController</definition>
        <argsstring>()</argsstring>
        <name>~TracksController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>destroyer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/controllers/TracksController.h" line="24" column="1" bodyfile="src/api/controllers/TracksController.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_tracks_controller_1aa1f0de3363e99ea1bdc2837c2f7ca0dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool TracksController::handles</definition>
        <argsstring>(std::string method, std::string url)</argsstring>
        <name>handles</name>
        <reimplements refid="class_controller_1a0c8c0a4a4e853a3b33c1afcf55795f51">handles</reimplements>
        <param>
          <type>std::string</type>
          <declname>method</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns if the controller handles the given method and url <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>the http method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>the request url </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if handles, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/controllers/TracksController.h" line="32" column="1" bodyfile="src/api/controllers/TracksController.cpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_tracks_controller_1a56e1207a64480a2d10befdfc55f6ab95" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_response" kindref="compound">Response</ref> *</type>
        <definition>Response * TracksController::process</definition>
        <argsstring>(Request &amp;request)</argsstring>
        <name>process</name>
        <reimplements refid="class_controller_1afa78a73d099dc2920b22b2927f7870d6">process</reimplements>
        <param>
          <type><ref refid="class_request" kindref="compound">Request</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Process the given request and respond accordingly <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding response </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/controllers/TracksController.h" line="39" column="1" bodyfile="src/api/controllers/TracksController.cpp" bodystart="34" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_tracks_controller_1a8694f1ebe4ac4e538a89a76dd530ed28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TracksController::get</definition>
        <argsstring>(Request &amp;request, JSONResponse &amp;response)</argsstring>
        <name>get</name>
        <param>
          <type><ref refid="class_request" kindref="compound">Request</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="class_j_s_o_n_response" kindref="compound">JSONResponse</ref> &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the given track <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>with the track id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>containing the track id and the play url </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/controllers/TracksController.h" line="46" column="1" bodyfile="src/api/controllers/TracksController.cpp" bodystart="48" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_tracks_controller_1a1c2c649404dfb9d6edbb1d8facd977df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TracksController::post</definition>
        <argsstring>(int trackId, const char *filename)</argsstring>
        <name>post</name>
        <param>
          <type>int</type>
          <declname>trackId</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Post a track to create it <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trackId</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/controllers/TracksController.h" line="53" column="1" bodyfile="src/api/controllers/TracksController.cpp" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_tracks_controller_1a5a99b4dac296c3dba50b0f732432b720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TracksController::setFileName</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>setFileName</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the filename of the file being uploaded <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/controllers/TracksController.h" line="59" column="1" bodyfile="src/api/controllers/TracksController.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_tracks_controller_1aa7db9af256dd07f3fdf65df79b48000e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct mg_str</type>
        <definition>struct mg_str TracksController::upload_fname</definition>
        <argsstring>(struct mg_connection *c, struct mg_str file_name)</argsstring>
        <name>upload_fname</name>
        <param>
          <type>struct mg_connection *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>struct mg_str</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/controllers/TracksController.h" line="59" column="1" bodyfile="src/api/controllers/TracksController.cpp" bodystart="8" bodyend="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="32">
        <label>TracksController</label>
        <link refid="class_tracks_controller"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>Controller</label>
        <link refid="class_controller"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="34">
        <label>TracksController</label>
        <link refid="class_tracks_controller"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>Controller</label>
        <link refid="class_controller"/>
      </node>
    </collaborationgraph>
    <location file="src/api/controllers/TracksController.h" line="14" column="1" bodyfile="src/api/controllers/TracksController.h" bodystart="14" bodyend="67"/>
    <listofallmembers>
      <member refid="class_controller_1abe812429430dca0aae5b09b4b304af26" prot="public" virt="non-virtual"><scope>TracksController</scope><name>addRoute</name></member>
      <member refid="class_controller_1a95c56822d667e94b031451729ce069a9" prot="public" virt="non-virtual"><scope>TracksController</scope><name>Controller</name></member>
      <member refid="class_tracks_controller_1a23185049184ec7af725174816e8d54d8" prot="private" virt="non-virtual"><scope>TracksController</scope><name>fileName</name></member>
      <member refid="class_tracks_controller_1a8694f1ebe4ac4e538a89a76dd530ed28" prot="public" virt="non-virtual"><scope>TracksController</scope><name>get</name></member>
      <member refid="class_tracks_controller_1aa1f0de3363e99ea1bdc2837c2f7ca0dc" prot="public" virt="virtual"><scope>TracksController</scope><name>handles</name></member>
      <member refid="class_tracks_controller_1a1c2c649404dfb9d6edbb1d8facd977df" prot="public" virt="non-virtual"><scope>TracksController</scope><name>post</name></member>
      <member refid="class_tracks_controller_1a56e1207a64480a2d10befdfc55f6ab95" prot="public" virt="virtual"><scope>TracksController</scope><name>process</name></member>
      <member refid="class_controller_1a8f3775d9453ff7db9e88781bcffbae95" prot="protected" virt="non-virtual"><scope>TracksController</scope><name>routes</name></member>
      <member refid="class_controller_1a53ed1daa58f8458d71a5526e6fe6fcb6" prot="public" virt="non-virtual"><scope>TracksController</scope><name>serverInternalError</name></member>
      <member refid="class_controller_1a88c3e72cbf6e8f9a4843a067e4723c8c" prot="protected" virt="non-virtual"><scope>TracksController</scope><name>setElementId</name></member>
      <member refid="class_tracks_controller_1a5a99b4dac296c3dba50b0f732432b720" prot="public" virt="non-virtual"><scope>TracksController</scope><name>setFileName</name></member>
      <member refid="class_tracks_controller_1a0a06390b5b3f3b644e7e2eb6eb49cb69" prot="public" virt="non-virtual"><scope>TracksController</scope><name>TracksController</name></member>
      <member refid="class_tracks_controller_1ac22a9d208e121c572aca7350f422efc2" prot="private" virt="non-virtual"><scope>TracksController</scope><name>tracksRegex</name></member>
      <member refid="class_tracks_controller_1aa7db9af256dd07f3fdf65df79b48000e" prot="public" virt="non-virtual"><scope>TracksController</scope><name>upload_fname</name></member>
      <member refid="class_controller_1acbabc355661618f30e04c613ae8b3340" prot="protected" virt="non-virtual"><scope>TracksController</scope><name>urls</name></member>
      <member refid="class_controller_1a0ab87934c4f7a266cfdb86e0f36bc1b5" prot="public" virt="virtual"><scope>TracksController</scope><name>~Controller</name></member>
      <member refid="class_tracks_controller_1af6236ccbd57548cb5ef149c361b1316c" prot="public" virt="virtual"><scope>TracksController</scope><name>~TracksController</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
