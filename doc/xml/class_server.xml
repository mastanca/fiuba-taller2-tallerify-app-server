<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_server" kind="class" language="C++" prot="public">
    <compoundname>Server</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_server_1ad28f45770d3f08c840688fb4993911ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ServerTest</definition>
        <argsstring></argsstring>
        <name>ServerTest</name>
        <briefdescription>
<para>Frield class for testing private methods. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="17" column="1" bodyfile="src/api/networking/Server.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_server_1aa9fd1e810a95407cddc0bece6b625183" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void event_handler</definition>
        <argsstring>(mg_connection *c, int ev, void *p)</argsstring>
        <name>event_handler</name>
        <param>
          <type>mg_connection *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="49" column="1" bodyfile="src/api/networking/Server.cpp" bodystart="8" bodyend="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_server_1a766819efc0063a5dac27ab6dc66cbfd9" prot="private" static="no" mutable="no">
        <type>mg_mgr *</type>
        <definition>mg_mgr* Server::server</definition>
        <argsstring></argsstring>
        <name>server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="41" column="1" bodyfile="src/api/networking/Server.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_1a8a6f41215b74791bbe1c1d16cb6acf3e" prot="private" static="no" mutable="no">
        <type>mg_connection *</type>
        <definition>mg_connection* Server::connection</definition>
        <argsstring></argsstring>
        <name>connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="42" column="1" bodyfile="src/api/networking/Server.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_1a926c9dae229a62b6d33fdbb41dca6d82" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Server::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="43" column="1" bodyfile="src/api/networking/Server.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_1a4db32e1a16e0423cf619d7914fa9b8c2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Server::running</definition>
        <argsstring></argsstring>
        <name>running</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="44" column="1" bodyfile="src/api/networking/Server.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_1a7e65fc13a3f8c009d8429ba1b78b9ca2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_controller" kindref="compound">Controller</ref> * &gt;</type>
        <definition>std::vector&lt;Controller *&gt; Server::controllers</definition>
        <argsstring></argsstring>
        <name>controllers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="45" column="1" bodyfile="src/api/networking/Server.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_server_1a495b58bef6f0d4ca6260de206cff6291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Server::Server</definition>
        <argsstring>(int port=8080)</argsstring>
        <name>Server</name>
        <param>
          <type>int</type>
          <declname>port</declname>
          <defval>8080</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_server" kindref="compound">Server</ref> constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>server port, defaults to 8080 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="23" column="1" bodyfile="src/api/networking/Server.cpp" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_server_1a4b3aa2579cb1c8cd1d069582c14d0fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Server::~Server</definition>
        <argsstring>()</argsstring>
        <name>~Server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_server" kindref="compound">Server</ref> destroyer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="28" column="1" bodyfile="src/api/networking/Server.cpp" bodystart="23" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_server_1a7eac07d2582fa01c2671362efa955b31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the server </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="33" column="1" bodyfile="src/api/networking/Server.cpp" bodystart="32" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_server_1a07c45a7e101a3926d8f9685c3c5d14e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stops the server, cleaning associated resources </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="38" column="1" bodyfile="src/api/networking/Server.cpp" bodystart="51" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_server_1aad7bf25135f467cd6dd74cae2bb951da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::handleRequest</definition>
        <argsstring>(mg_connection *connection, http_message *message)</argsstring>
        <name>handleRequest</name>
        <param>
          <type>mg_connection *</type>
          <declname>connection</declname>
        </param>
        <param>
          <type>http_message *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="47" column="1" bodyfile="src/api/networking/Server.cpp" bodystart="58" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_server_1ac9de1554cafa597ec713f3e064c3f2ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_response" kindref="compound">Response</ref> *</type>
        <definition>Response * Server::handleRequest</definition>
        <argsstring>(Request &amp;request)</argsstring>
        <name>handleRequest</name>
        <param>
          <type><ref refid="class_request" kindref="compound">Request</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="51" column="1" bodyfile="src/api/networking/Server.cpp" bodystart="69" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_server_1abc0fb815029cd6a2672f24b8c66a2378" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Server::registerController</definition>
        <argsstring>(Controller *controller)</argsstring>
        <name>registerController</name>
        <param>
          <type><ref refid="class_controller" kindref="compound">Controller</ref> *</type>
          <declname>controller</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/api/networking/Server.h" line="53" column="1" bodyfile="src/api/networking/Server.cpp" bodystart="92" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/api/networking/Server.h" line="15" column="1" bodyfile="src/api/networking/Server.h" bodystart="15" bodyend="54"/>
    <listofallmembers>
      <member refid="class_server_1a8a6f41215b74791bbe1c1d16cb6acf3e" prot="private" virt="non-virtual"><scope>Server</scope><name>connection</name></member>
      <member refid="class_server_1a7e65fc13a3f8c009d8429ba1b78b9ca2" prot="private" virt="non-virtual"><scope>Server</scope><name>controllers</name></member>
      <member refid="class_server_1aa9fd1e810a95407cddc0bece6b625183" prot="private" virt="non-virtual"><scope>Server</scope><name>event_handler</name></member>
      <member refid="class_server_1aad7bf25135f467cd6dd74cae2bb951da" prot="private" virt="non-virtual"><scope>Server</scope><name>handleRequest</name></member>
      <member refid="class_server_1ac9de1554cafa597ec713f3e064c3f2ab" prot="private" virt="non-virtual"><scope>Server</scope><name>handleRequest</name></member>
      <member refid="class_server_1a926c9dae229a62b6d33fdbb41dca6d82" prot="private" virt="non-virtual"><scope>Server</scope><name>port</name></member>
      <member refid="class_server_1abc0fb815029cd6a2672f24b8c66a2378" prot="private" virt="non-virtual"><scope>Server</scope><name>registerController</name></member>
      <member refid="class_server_1a4db32e1a16e0423cf619d7914fa9b8c2" prot="private" virt="non-virtual"><scope>Server</scope><name>running</name></member>
      <member refid="class_server_1a495b58bef6f0d4ca6260de206cff6291" prot="public" virt="non-virtual"><scope>Server</scope><name>Server</name></member>
      <member refid="class_server_1a766819efc0063a5dac27ab6dc66cbfd9" prot="private" virt="non-virtual"><scope>Server</scope><name>server</name></member>
      <member refid="class_server_1ad28f45770d3f08c840688fb4993911ad" prot="private" virt="non-virtual"><scope>Server</scope><name>ServerTest</name></member>
      <member refid="class_server_1a7eac07d2582fa01c2671362efa955b31" prot="public" virt="non-virtual"><scope>Server</scope><name>start</name></member>
      <member refid="class_server_1a07c45a7e101a3926d8f9685c3c5d14e4" prot="public" virt="non-virtual"><scope>Server</scope><name>stop</name></member>
      <member refid="class_server_1a4b3aa2579cb1c8cd1d069582c14d0fa6" prot="public" virt="virtual"><scope>Server</scope><name>~Server</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
